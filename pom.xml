<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zcswl</groupId>
	<artifactId>demo</artifactId>
	<version>v0.0.1</version>


	<!--子模块-->
    <modules>
        <module>util-elasticsearch</module>
		<module>util-annotation</module>
		<module>util-concurrent</module>
		<module>util-enum</module>
		<module>util-guava</module>
		<module>util-tools</module>
		<module>util-kafka</module>
		<module>util-jdk</module>
        <module>util-middleware</module>
		<module>util-auto</module>
		<module>util-dependencies</module>
        <module>util-snowflake</module>
		<module>util-lock</module>
		<module>util-db</module>
        <module>util-swagger</module>
        <module>util-pattern</module>
        <module>util-dataflow</module>
        <module>util-mybatis</module>
		<module>util-transaction</module>
        <module>util-jcl</module>
		<module>util-zwork</module>
        <module>util-spring</module>
        <module>util-io</module>
    </modules>

	<!-- 作为聚合modules使用 -->
    <packaging>pom</packaging>

	<name>demo</name>
	<description>java基础组件调用 - 类调用</description>

	<developers>
		<developer>
			<name>zhoucg</name>
			<email>26921832@qq.com</email>
		</developer>
	</developers>


	<!--<scm>
		<developerConnection>https://github.com/zcswl7961/unit-common.git</developerConnection>
		<connection>https://github.com/zcswl7961/unit-common.git</connection>
		<url>https://github.com/zcswl7961/unit-common</url>
	</scm>-->

	<!--发布依赖包到对应的私服配置中
			使用 mvn clean deploy 命令发布依赖包
				repository：配置表示的对应的稳定版本，
		snapshotRepository：表示扩展版本
			这两个配置中的id需要和maven中settings.xml中<server>中配置的id保持一致，不然会出现权限问题，
			url 分别指定 maven-releases 和 maven-snapshots 的地址(同样你也可以自己创建对应的仓库地址)
		带有 SNAPSHOT 的就会到 snapshots 仓库，如果不加 SNAPSHOT 就会到 releases 仓库。
			-->
	<distributionManagement>
		<!-- 稳定版本 -->
		<repository>
			<id>maven-repository-releases</id>
			<url>http://localhost:8081/repository/maven-releases/</url>
		</repository>

		<!-- 快照版本-->
		<snapshotRepository>
			<id>maven-repository-snapshots</id>
			<url>http://localhost:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>


	<!-- 处理从maven中配置的中央仓库中下来依赖包之外，同样会从下面配置的
	 		私服地址进行下载依赖 其中id和你的仓库名称一致
	 		设置 snapshots 的 enabled 为ture，表示允许下载 snapshots 版本的包-->
	<repositories>
		<repository>
			<id>maven-releases</id>
			<name>maven-releases</name>
			<url>http://localhost:8081/repository/maven-releases/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<!--美创私服-->
		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://192.168.238.237:8081/nexus/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</snapshots>
		</repository>
	</repositories>


	<properties>
		<!-- 模块版本固定 -->
		<util-common.version>v0.0.1</util-common.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<metrics.version>4.0.0</metrics.version>
		<elasticsearch-sql.version>5.1.2.0</elasticsearch-sql.version>
		<elasticsearch.version>5.1.2</elasticsearch.version>

		<spark.version>2.0.2</spark.version>
		<scala.version>2.11</scala.version>
		<kafka.version>1.0.2</kafka.version>
		<swagger.version>2.5.0</swagger.version>
		<gson.version>2.3.1</gson.version>
		<guava.version>27.0.1-jre</guava.version>
		<redis.version>2.9.0</redis.version>

		<spring-boot.version>2.0.5.RELEASE</spring-boot.version>

		<auto.version>1.0-beta7</auto.version>
	</properties>

	<!--版本控制 -->
	<dependencyManagement>
		<dependencies>
			<!-- 引入sftp包，进行解析操作 -->
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>0.1.42</version>
			</dependency>

			<dependency>
				<groupId>org.samba.jcifs</groupId>
				<artifactId>jcifs</artifactId>
				<version>1.2.19</version>
			</dependency>

			<!-- Metric 用于指标记录  -->
			<dependency>
				<groupId>io.dropwizard.metrics</groupId>
				<artifactId>metrics-core</artifactId>
				<version>${metrics.version}</version>
			</dependency>

			<!-- elastisearch sql支持查询 -->
			<dependency>
				<groupId>org.nlpcn</groupId>
				<artifactId>elasticsearch-sql</artifactId>
				<version>${elasticsearch-sql.version}</version>
			</dependency>

			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>transport</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>

			<!--gson引入 -->
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>

			<!-- google guava 类库引入 -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<!-- redis库-->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>${redis.version}</version>
			</dependency>

			<!-- spark java 引入 -->
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-streaming_${scala.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-streaming-kafka-0-10_${scala.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>

			<!-- kafka包 -->
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.11</artifactId>
				<version>${kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>1.4</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.4</version>
			</dependency>

			<!-- aop包-->
			<dependency>
				<groupId>aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>1.5.4</version>
			</dependency>

			<dependency>
				<groupId>aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.5.4</version>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.26</version>
			</dependency>

			<!-- 日志配置-->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>2.11.1</version>
			</dependency>

			<!-- https://blog.csdn.net/K_520_W/article/details/84900722 -->
			<!-- https://blog.csdn.net/shijiujiu33/article/details/93381277 -->
			<!-- spring boot 版本控制 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<target>1.8</target>
					<source>1.8</source>
					<encoding>UTF-8</encoding>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- java 源码打包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- java doc文档打包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- 设置swagger插件导出数据操作 -->
            <!--<plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>2.2.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>src/main/resources/queryApi.yaml</inputSpec>
                            <language>spring</language>
                            <library>spring-cloud</library>
                            <configOptions>
                                <sourceFolder>src/gen/java/main</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
			<!--<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>-->
        </plugins>
	</build>

	<!--发布到中央仓库
			https://www.jianshu.com/p/923913d904fb
			https://blog.csdn.net/lizhengjava/article/details/81704283
https://www.cnblogs.com/jialin16/p/8624019.html -->
	<!--<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					&lt;!&ndash; GPG &ndash;&gt;
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				&lt;!&ndash; 稳定版本 &ndash;&gt;
				<repository>
					<id>maven-repository-releases</id>
					<url>http://localhost:8081/repository/maven-releases/</url>
				</repository>

				&lt;!&ndash; 快照版本&ndash;&gt;
				<snapshotRepository>
					<id>maven-repository-snapshots</id>
					<url>http://localhost:8081/repository/maven-snapshots/</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
	</profiles>-->

</project>
